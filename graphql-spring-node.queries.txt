### Приложение
http://localhost:8080/

### Get schema
http://localhost:8080/graphql/schema.json


########################################
## QUERY
########################################
    query{
      authors{
        id, name, biography
        books {
          id, title, releaseDate, description
          comments {
            id, content
          }
        }
      }
    }


########################################
## MUTATION
########################################
    mutation{
      createAuthor(
        id: "000100000000000000000000"
        name: "Author1",
        biography: "Author1 biography"
      ){id}
    }
    mutation{
      changeAuthor(
        id: "000100000000000000000000"
        name: "Author1 new name",
        biography: "Author2 new biography"
      ){id}
    }

    mutation{
      createBook(
        id: "000100010000000000000000",
        authorId: "000100000000000000000000",
        title: "Book #1",
        description: "Book #1 description"
      ){id, title, author{id, name}}
    }
    mutation{
      createBook(
        id: "000100020000000000000000",
        authorId: "000100000000000000000000",
        title: "Book #2",
        description: "Book #2 description"
      ){id, title, author{id, name}}
    }
    mutation{
      createBook(
        id: "000100030000000000000000",
        authorId: "000100000000000000000000",
        title: "Book #3",
        description: "Book #3 description"
      ){id, title, author{id, name}}
    }

    mutation{
      createComment(
        id: "000100010001000000000000",
        bookId: "000100010000000000000000",
        content: "Comment #1"
      ){id}
    }
    mutation{
      createComment(
        id: "000100010002000000000000",
        bookId: "000100010000000000000000",
        content: "Comment #2"
      ){id}
    }

########################################
## CACHE
########################################
    fragment CacheConfigurationFields on CacheConfiguration{
      timeToIdleSeconds, timeToLiveSeconds,
      maxBytesLocalHeap, maxBytesLocalOffHeap, maxBytesLocalDisk,
      maxEntriesInCache, maxEntriesLocalHeap, maxEntriesLocalDisk
    }
    fragment CacheStatisticsFields on CacheStatistics{
      localHeapSize, localOffHeapSize, localDiskSize,
      localHeapSizeInBytes, localOffHeapSizeInBytes, localDiskSizeInBytes
    }
    {
      cachies{
        name
        configuration{...CacheConfigurationFields}
        statistics{...CacheStatisticsFields}
      }
    }

########################################
## Login
########################################
    mutation {signIn(login: "admin", password: "admin"){token}}

    полученный токен необходимо передавать в header последующих запросов ('HTTP HEADERS' в тестовой консоли внизу слева)
    {"x-token": "....."}

########################################
## SUBSCRIPTION
########################################
    subscription {
      onComment{
        eventType,
        comment{
          id,
          book {id, author {id, name}}
          user {name}
          content,
          createdAt
        }
      }
    }

    mutation{
      createComment(
        bookId: "book_1_1",
        content: "Comment XXXXXXX"
      ){id}
    }