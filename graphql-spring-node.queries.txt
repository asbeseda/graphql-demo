### Приложение
http://localhost:8080/

### Get schema
http://localhost:8080/graphql/schema.json


## Получение данных
query{
  authors{
    id, name, biography
    books {
      id, title, releaseDate, description
      comments {
        id, content
      }
    }
  }
}


## Добавление данных
mutation{
  createAuthor(
    id: "000100000000000000000000"
    name: "Author1",
  	biography: "Author1 biography"
  ){id}
}
mutation{
  createAuthor(
    id: "000200000000000000000000"
    name: "Author2",
  	biography: "Author2 biography"
  ){id}
}

mutation{
  createBook(
    id: "000100010000000000000000",
    authorId: "000100000000000000000000",
    title: "Book #1",
    description: "Book #1 description"
  ){id, title, author{id, name}}
}
mutation{
  createBook(
    id: "000100020000000000000000",
    authorId: "000100000000000000000000",
    title: "Book #2",
    description: "Book #2 description"
  ){id, title, author{id, name}}
}
mutation{
  createBook(
    id: "000100030000000000000000",
    authorId: "000100000000000000000000",
    title: "Book #3",
    description: "Book #3 description"
  ){id, title, author{id, name}}
}




## HTTP header для graphql-playground
    {"Authorization": "Basic admin admin"}
    В параметрах надо установить:
        "request.credentials": "include"
        "tracing.hideTracingResponse": false

## CACHE
    fragment CacheConfigurationFields on CacheConfiguration{
      timeToIdleSeconds, timeToLiveSeconds,
      maxBytesLocalHeap, maxBytesLocalOffHeap, maxBytesLocalDisk,
      maxEntriesInCache, maxEntriesLocalHeap, maxEntriesLocalDisk
    }
    fragment CacheStatisticsFields on CacheStatistics{
      localHeapSize, localOffHeapSize, localDiskSize,
      localHeapSizeInBytes, localOffHeapSizeInBytes, localDiskSizeInBytes
    }
    {
      cachies{
        name
        configuration{...CacheConfigurationFields}
        statistics{...CacheStatisticsFields}
      }
    }
